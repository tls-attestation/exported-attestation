{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-10-21T01:19:30.390689+00:00",
  "repo": "tls-attestation/exported-attestation",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "Sec cons",
      "description": "Security considerations",
      "color": "d93f0b"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDON6zrys6q5hSS",
      "title": "Questions from initial review of Introduction",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/2",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ionut-arm"
      ],
      "labels": [],
      "body": "- [ ] I didn't find \"Payload\" in RFC9261. Can you refer me to the document which is closest in the sense it is used?\n- [x] I don't seem to understand the following sentence: \n> The end-entity certificate is associated with key material that serves as an Attestation Key, which acts as Evidence originating from the Attester.\n- [x] Not sure about the following sentence: Why not from the client? Are you scoping to a specific scenario, e.g., server/client as Attester or something else? This needs some explanation. \n> The mechanisms described in this document focus primarily on the server's ability to generate TLS Exported Authenticators.",
      "createdAt": "2025-02-20T20:31:25Z",
      "updatedAt": "2025-10-18T17:33:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Usama, I've taken the liberty to make checkboxes from your points above to track them more easily, but it turns out all of the issues are now gone, probably fixed in a newer version of the draft. If you'd like, you can check as well. Otherwise, feel free to close this.",
          "createdAt": "2025-10-15T23:08:47Z",
          "updatedAt": "2025-10-15T23:08:47Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, the last 2 sub-issues are indeed fixed. About the first one, I still see the \"payload\" in the editor draft. \n\n> CMW provides a structured encapsulation of Evidence and Attestation Result payloads, abstracting the underlying attestation technology.\n\nMaybe some PR replaces it; else I want to understand what exactly does it mean. For example, what is the difference between `Evidence` and `Evidence payload`?",
          "createdAt": "2025-10-18T17:33:05Z",
          "updatedAt": "2025-10-18T17:33:05Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDON6zrys6sVywR",
      "title": "Define Key Attestation in terminology",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/7",
      "state": "CLOSED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I am not yet sure in what sense key attestation is used in the draft. I think you mean workload attestation instead? Particularly the key in Confidential Computing does not exist at initial measurement time (load-time measurement), and hence I think the key -- per se -- cannot be \"attested\". ",
      "createdAt": "2025-03-03T14:22:35Z",
      "updatedAt": "2025-10-20T05:53:26Z",
      "closedAt": "2025-10-20T05:53:26Z",
      "comments": [
        {
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Alternatively copy the definition of \"key attestation\" from draft-bft-rats-kat:\n\n> Evidence containing properties of the environment(s) in which the\n      private keys are stored.  For example, a Relying Party may want to\n      know whether a private key is stored in a hardware security module\n      and cannot be exported in unencrypted fashion.",
          "createdAt": "2025-05-01T10:15:08Z",
          "updatedAt": "2025-05-01T10:15:08Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm leaning towards removing any references to key attestation from the document, as I'm unsure what the value add of attesting keys is in this context. We're making it clear that there has to be some network identity key available to the attester, along with a certificate for it (since the attestation credential is only in an extension of the Certificate message). The binding between RA and TLS also doesn't happen through this key, but through the exported material.",
          "createdAt": "2025-10-16T09:43:46Z",
          "updatedAt": "2025-10-16T09:43:46Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm pretty sure that we still want to say that the key used for signing the handshake is guaranteed to have the property of being protected by the TEE, and that this can be proven by means of attestation.\nThis is what I believe \"key attestation\u201d means, or at least how I intend it.\nIf the term is confusing, I am happy to remove it.\nHowever, whenever we use the term \u201cattestation\u201d or \u201cevidence\u201d in the context of the document, the above property should be clearly implied.",
          "createdAt": "2025-10-16T10:04:25Z",
          "updatedAt": "2025-10-16T10:12:08Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm pretty sure that we still want to say that the key used for signing the handshake is guaranteed to have the property of being protected by the TEE, and that this can be proven by means of attestation.\n\nI don't know if key attestation in particular makes this easier or not. For key attestation to be valid you need to:\n\n1. attest the key (which I assume is daisy-chained via hashes to the platform and/or workload tokens)\n2. send the attestation credential to the RP\n3. get the RP to understand the credential _and_ trust that the code enforces what the credential says about the key (i.e., that it's protected by the TEE)\n\nBut for point (3) if the RP understands and trusts all that about the attester (via its measurements), what's the difference from just having regular workload attestation and relying on measurements of the networking stack to infer that the key used is indeed in the TEE. The RP _needs_ to know that anyway (and can infer it), without explicitly binding the key in the evidence.\n\nI guess we're both after the same guarantee, just that you're looking for explicit attestation and I'm settling for implicit attestation :grin:",
          "createdAt": "2025-10-16T10:32:04Z",
          "updatedAt": "2025-10-16T10:34:34Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "> I guess we're both after the same guarantee, just that you're looking for explicit attestation and I'm settling for implicit attestation\n\nAlso, implicit is probably far more rough in what it can convey, perhaps only one bit (\"in TEE\"). So depends if you want/need more metadata about the key (provenance, security policy...)",
          "createdAt": "2025-10-16T10:44:26Z",
          "updatedAt": "2025-10-16T10:44:26Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Sure, I don\u2019t think explicit vs implicit is the discriminant here.  The important thing is to clearly state that the RP needs to check that the \u201cprotection of the signing key\u201d property is satisfied.\n",
          "createdAt": "2025-10-16T10:57:08Z",
          "updatedAt": "2025-10-16T10:57:08Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool, I'll update the PR to reflect this! Thanks!",
          "createdAt": "2025-10-16T11:00:19Z",
          "updatedAt": "2025-10-16T11:00:19Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "All instances of \"key attestation\" are now removed. Closing the issue. ",
          "createdAt": "2025-10-20T05:53:26Z",
          "updatedAt": "2025-10-20T05:53:26Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDON6zrys6sV_CY",
      "title": "Separate Client-Side Attester?",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/8",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "What does it mean to have a \"Separate Client-Side Attester\" in Background-Check model? If the TLS connection terminates outside of Attester, there are trivial attacks possible (e.g., in case of Confidential Computing). ",
      "createdAt": "2025-03-03T14:40:46Z",
      "updatedAt": "2025-03-03T14:40:46Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDON6zrys6utZmq",
      "title": "Coverage of the measurements/evidence",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/11",
      "state": "CLOSED",
      "author": "yaronf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Sec cons"
      ],
      "body": "The draft (maybe in Sec Considerations) should say that not only does the TLS stack need to be covered by measurements, but also:\n\n1. The code that performs the post-handshake phase must be measured, and...\n2. There must be no other way to initiate generation of evidence except from signed code.",
      "createdAt": "2025-03-19T09:49:04Z",
      "updatedAt": "2025-10-20T23:03:31Z",
      "closedAt": "2025-10-20T23:03:31Z",
      "comments": [
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "I wonder if this should be part of the properties in the [use-cases draft](https://github.com/tls-attestation/use-cases-and-properties).\n\n@thomas-fossati @muhammad-usama-sardar - thoughts?",
          "createdAt": "2025-10-15T10:04:40Z",
          "updatedAt": "2025-10-15T10:04:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I wonder if this should be part of the properties in the [use-cases draft](https://github.com/tls-attestation/use-cases-and-properties).\n> \n> [@thomas-fossati](https://github.com/thomas-fossati) [@muhammad-usama-sardar](https://github.com/muhammad-usama-sardar) - thoughts?\n\nI am not sure.  How are these supposed to be achieved through pure protocol means?",
          "createdAt": "2025-10-15T10:11:37Z",
          "updatedAt": "2025-10-15T10:11:37Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "True, don't think it's something we can design in, but I don't think they have to be strictly solvable like that. Maybe we can cover things that _need_ to go in the Security considerations as well.",
          "createdAt": "2025-10-15T10:19:20Z",
          "updatedAt": "2025-10-15T10:19:20Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Fair enough. Then I am fine with (also) adding it to the UC document.",
          "createdAt": "2025-10-15T11:01:12Z",
          "updatedAt": "2025-10-15T11:01:21Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Covered in #28 . ",
          "createdAt": "2025-10-19T19:19:04Z",
          "updatedAt": "2025-10-19T19:20:19Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDON6zrys6yXhwb",
      "title": "Security Considerations: session resumption",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/13",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Sec cons"
      ],
      "body": "Discussion with @yaronf, @thomas-fossati , @ionut-arm and Carsten: \n\nFor Sec. 4.1. in draft-00 (Using the TLS Connection): \n\n**Background**: If the session drops due to some reason, one can do session resumption rather than complete handshake. \n**Problem**: There can be problems in session resumption if remote attestation has not already been done for that session. \n**Solution**:\nFirst remote attestation MUST be done right after the initial handshake. This reduces the problem to essentially 1 round-trip time (for sending Authenticator Request and getting Authenticator) plus time for generation of Evidence and appraisal of Evidence. \n\nThe next rounds of remote attestation can be done on need basis. ",
      "createdAt": "2025-04-14T09:47:31Z",
      "updatedAt": "2025-10-19T19:15:33Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Possible solution to avoid the race condition:\n* Establish the handshake with explicit flags that prevent session resumption. (From the client side this can simply mean: delete the ticket before the handshake is complete.)\n* Do remote attestation.\n* Then enable session resumption. (Send a new `NewSessionTicket`.)\n\nFrom a TLS handshake perspective this is possible. The question is whether APIs (specifically the OpenSSL API) support these operations and/or can be extended to do so.",
          "createdAt": "2025-04-21T08:25:19Z",
          "updatedAt": "2025-05-01T10:17:03Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDON6zrys61AAtI",
      "title": "Terminology: EK in CertificateVerify",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/14",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In RATS interim, Deb mentioned that ephemeral key in CertificateVerify for Authenticator is confusing. \nClarify the terminology such that it does not contradict TLS.\n\nMore context: [interim notes](https://notes.ietf.org/notes-ietf-interim-2025-rats-01-rats#740---755-Identity-Crisis-in-Attested-TLS-for-Confidential-Computing)\n\nWe should define EK upfront in the terminology section. ",
      "createdAt": "2025-05-02T19:21:32Z",
      "updatedAt": "2025-10-15T10:55:40Z",
      "closedAt": null,
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "I like Deb's proposal of defining EK as \"self-asserted\" and saying the proof of possession is typically provided by self-signed cert. \n\nSo define it like: \n\n- LTK = CA-certified Long-Term Key (used for server \"authentication\")\n- EK = self-asserted Ephemeral Key (used for remote attestation)",
          "createdAt": "2025-05-03T13:14:45Z",
          "updatedAt": "2025-05-03T13:14:45Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Summary of discussion with @thomas-fossati, @ionut-arm and @tireddy2 (Please correct if I get something wrong and add if I missed something)\n\nWith Realm Personalization Value (RPV), it may be possible to identify the Realm. Hence, it may be possible to get rid of `EK` altogether. Post-handshake CertificateVerify message will then use the `LTK` as usual. \n\nAll of this is under the assumption that `LTK` has been provisioned to the TEE. ",
          "createdAt": "2025-05-05T10:48:08Z",
          "updatedAt": "2025-05-05T10:48:08Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, not sure if this issue is (still) relevant. The draft does not mention EK / \"ephemeral\" anywhere, so I assume it was part of your presentation?",
          "createdAt": "2025-10-15T10:55:40Z",
          "updatedAt": "2025-10-15T10:55:40Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDON6zrys61CX4z",
      "title": "Security consideration: Relay attack",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/15",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Sec cons"
      ],
      "body": "What prevents a malicious Attester from relaying the `certificate_request_context` to a genuine TEE and presenting the Evidence of that genuine TEE?\nThis question is not specific to `certificate_request_context` but applies in general to the draft (i.e., also to nonce, timestamp, epoch markers etc.).\n\nTiru's proposal: (discussed [here](https://github.com/tls-attestation/exported-attestation/pull/12#issuecomment-2844582521))\n> one possible technique could be that the verifier will have to enforce policies that ensure the TEE producing the evidence is the one it expects, not just any valid TEE.",
      "createdAt": "2025-05-03T09:25:45Z",
      "updatedAt": "2025-10-19T19:15:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we discussed this and the clarification in the security section should be two-fold:\n\n* from a protocol perspective, the authenticator binds the attester's response to the current session\n* from an RA perspective, the code handling this should be measured and appraised as per #11 \n\nTiru's proposal works in situations where the RP knows exactly which machine they're expecting to talk to, but that's not always the case.",
          "createdAt": "2025-10-15T11:09:11Z",
          "updatedAt": "2025-10-15T11:09:11Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDON6zrys7Af4J0",
      "title": "Misleading \"Finished\" Message",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/21",
      "state": "CLOSED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I am not sure why do we have an arrow from Verifier to Server with \"Finished\" in [Fig. 1](https://www.ietf.org/archive/id/draft-fossati-tls-exported-attestation-02.html#figure-1)? I think it should be removed. ",
      "createdAt": "2025-07-14T18:04:18Z",
      "updatedAt": "2025-09-10T15:32:31Z",
      "closedAt": "2025-09-10T15:32:31Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that the Finished seems completely misplaced.\n\nBTW, that\u2019s not the only weird bit in Figure 1: the passport exchange should be shown before the handshake, rather than interwoven.",
          "createdAt": "2025-07-15T07:58:37Z",
          "updatedAt": "2025-07-15T07:58:37Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "> the passport exchange should be shown before the handshake, rather than interwoven\n\nAs discussed with @ionut-arm, @yaronf and Carsten:\nThe key point is: What binds the attestation results to the handshake? This may be done using exporters as follows:\n\n- Server puts `certificate_request_context` in AuthenticatorRequest (ClientCertificateRequest) \n- Client forwards that as `rdata` in Evidence to the Verifier\n- Verifier puts `rdata` as part of the AR. (It might require changes in the Verifier to also reflect `rdata`)\n- Client sends Exported Authenticator with AR containing the `rdata`\n- Server can then check the AR which includes `certificate_request_context` ",
          "createdAt": "2025-08-04T09:29:39Z",
          "updatedAt": "2025-08-04T09:29:39Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDON6zrys7BRBSe",
      "title": "IANA comments to -02",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/22",
      "state": "CLOSED",
      "author": "yaronf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "Before the IETF meeting, we check working group agendas for documents with IANA-related issues. We have notes about this document:\n\nhttps://datatracker.ietf.org/doc/html/draft-fossati-tls-exported-attestation-02\n\n1) In Table 1, \u201cDTLS 1.3\u201d should be changed to \u201cDTLS-Only\u201d to match the registry:\n\nhttps://www.iana.org/assignments/tls-extensiontype-values\n\n2) The registry \u201cTLS Flags\u201d hasn\u2019t been created yet. Please add a reference to the document that\u2019s going to create it. (The section currently has a link to the registry URL, but the registry isn\u2019t there.)\n\nAmanda Baber\nIANA Operations Sr. Manager",
      "createdAt": "2025-07-18T08:56:00Z",
      "updatedAt": "2025-10-20T15:58:26Z",
      "closedAt": "2025-10-20T15:58:26Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDON6zrys7BXSI1",
      "title": "Ekr feedback on v2",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/23",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati",
        "muhammad-usama-sardar"
      ],
      "labels": [
        "Sec cons"
      ],
      "body": "> \n> I've now had a chance to look at this draft.\n> \n> At a high level I have the same concerns I expressed over\n> draft-fossati-tls-attestation, which is to say that it unclear what\n> actual security properties that attestation provides. This draft is\n> even more vague about this question. I appreciate that these\n> properties are dependent on the precise configuration of the peer\n> endpoint, and so there are presumably some specific assertions which\n> need to appear in the attestation that describe that configuration,\n> but I think the responsibility of this kind of draft is to explain\n> what the implications of various choices are.\n> \n> \n> In terms of the integration with TLS, I don't think the negotiation\n> structure is quite right. Specifically, you indicate support for this\n> mechanism with a CMW_Attestation flag in CH, which is then\n> acknowledged in EE, but then you provide the actual data in a\n> different extension (cmw_attestation) in Certificate. There are\n> two problems here:\n> \n> 1. You can't use flags this way.\n> 2. CH is generally not the right place.\n> \n> For point 1, draft-ietf-tls-tlsflags explicitly prohibits the use of a\n> flag to signal an actual extension:\n> \n> >    For a flag that does require a response, the only proper response is\n> >    the same flag in a flags extension.  This extension MUST NOT be used\n> >    to specify extensions where the response is a proper extension with\n> >    content.\n> \n> On point 2, here is what S 5.2 of RFC 9261 says:\n> \n> >    ClientHello extensions are used to determine permissible extensions\n> >    in the server's unsolicited Certificate message in order to follow\n> >    the general model for extensions in (D)TLS in which extensions can\n> >    only be included as part of a Certificate message if they were\n> >    previously sent as part of a CertificateRequest message or\n> >    ClientHello message.  This ensures that the recipient will be able to\n> >    process such extensions.\n> \n> As you are sending CertificateRequest and/or ClientCertificateRequest,\n> that is where the offer has to appear. IOW, the correct design is\n> to define only one extension, \"cmw_attestation\", which appears in\n> CertificateRequest or ClientCertificateRequest respectively.\n> \n> One more editorial point: you repeatedly refer to this as\n> \"post-handshake\", but that's more properly used to refer to the\n> mechanism in S 4.6.2 of RFC 8446. This mechanism isn't in TLS\n> at all, but rather in the application protocol but bound to\n> TLS.\n> \n> -Ekr",
      "createdAt": "2025-07-18T18:56:32Z",
      "updatedAt": "2025-10-19T19:15:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "> At a high level I have the same concerns I expressed over\ndraft-fossati-tls-attestation, which is to say that it unclear what\nactual security properties that attestation provides. \n\nAs a starting point, the security considerations section can add a reference to the [paper](https://ieeexplore.ieee.org/document/10373038), which covers two relevant Confidential Computing technologies in our context: Arm CCA and Intel TDX.",
          "createdAt": "2025-09-10T15:31:08Z",
          "updatedAt": "2025-09-10T15:31:08Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDON6zrys7BhVP0",
      "title": "Comments on draft charter",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/24",
      "state": "CLOSED",
      "author": "mwiseman32",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In first paragraph: We are enhancing the existing authentication. So should reverse the order: \n... in addition to conventional authentication (verification of identity), it's crucial to ensure that the peer's state is as expected.\n\n2nd paragraph: In phrase:\nsuch as proving that its software and firmware haven't been tampered with...\nAttestation cannot \"prove\" that software / firmware hasn't been tampered with. It can only provide evidence of its identity. The verifier, using policy and manifests, make the decision about the software's trustworthiness.\n\n2nd paragraph: Remove redundant \"verifiable\" \nRemote attestation ([RFC9334](https://datatracker.ietf.org/doc/rfc9334/)) addresses this by allowing an entity to produce Evidence about its current state.\n\n2nd paragraph: Remove implementation implication. I realized this is stated as an example but this infers a hardware-based implementation.\n...such as proving that its software and firmware haven't been tampered with, that secure boot is enabled, or that cryptographic keys are securely stored within a protected environment.\n\n",
      "createdAt": "2025-07-20T22:21:43Z",
      "updatedAt": "2025-09-10T13:38:46Z",
      "closedAt": "2025-09-10T13:38:46Z",
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you Monty. \n> In first paragraph: We are enhancing the existing authentication. So should reverse the order: ... in addition to conventional authentication (verification of identity), it's crucial to ensure that the peer's state is as expected.\n> \n\nAgree. \n\n> 2nd paragraph: In phrase: such as proving that its software and firmware haven't been tampered with... Attestation cannot \"prove\" that software / firmware hasn't been tampered with. It can only provide evidence of its identity. The verifier, using policy and manifests, make the decision about the software's trustworthiness.\n> \n\nMostly agree, except that attestation can provide evidence of state. Identity is related to authentication.\n> 2nd paragraph: Remove redundant \"verifiable\" Remote attestation ([RFC9334](https://datatracker.ietf.org/doc/rfc9334/)) addresses this by allowing an entity to produce Evidence about its current state.\n> \n\nWhat is \"verifiable\" redundant with?\n> 2nd paragraph: Remove implementation implication. I realized this is stated as an example but this infers a hardware-based implementation. ...such as proving that its software and firmware haven't been tampered with, that secure boot is enabled, or that cryptographic keys are securely stored within a protected environment.\n\nIndeed we are working with hardware-based attestation. So I think it should be fine. ",
          "createdAt": "2025-07-20T22:56:34Z",
          "updatedAt": "2025-07-20T22:56:34Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue as it has been settled.",
          "createdAt": "2025-09-10T13:38:46Z",
          "updatedAt": "2025-09-10T13:38:46Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDON6zrys7FujgO",
      "title": "Ahmed's feedback on -02",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/26",
      "state": "CLOSED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\n> If we want to support continued trust across session lifetime or regain trust after a state transition then this seems like something we can already express using existing mechanisms since using Exported Authenticators (RFC 9261) with a cmw_attestation extension lets us carry session-bound attestation evidence after the handshake.\n> \n> What\u2019s worth calling out, though, is how standard EAT (RFC 9248) claims help enforce key properties depending on the verifiers policy:\n> \n>     nonce \u2192 binds the evidence to the verifier's challenge and the TLS session,\n>     iat / exp \u2192 allow the verifier to enforce a freshness window or session expiration window,\n>     firmware_id, secboot, or similar \u2192 help the verifier evaluate platform state against known-trusted configuration.\n> \n> \n> This gives the relying party enough structure to say: \u201cI\u2019ll continue trusting this session if the attestation was recent and the platform is still in a known-good state.\u201d\n> \n> If that\u2019s no longer the case, for example, if the evidence has expired or the verifier has learned that the attested state is no longer acceptable then it can simply send a new CertificateRequest message. That triggers the peer to generate a fresh Exported Authenticator with updated attestation (or fail to do so), and the verifier can decide whether to continue the session or terminate it based on that result.\n> \n> It might be helpful to include a concrete EAT-style example in the EXPATdraft, illustrating how claims like nonce, iat, and exp can support verifier-side policy, for example, enforcing evidence freshness, session binding, or attestation expiry. Since these claims are optional in EAT but highly relevant in this context, showing how they apply in the TLS Exported Authenticator setting would make the draft more implementer-friendly. ",
      "createdAt": "2025-08-13T07:52:53Z",
      "updatedAt": "2025-10-15T17:02:18Z",
      "closedAt": "2025-10-15T17:02:18Z",
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Ahmed [agreed on the list](https://mailarchive.ietf.org/arch/msg/seal/gIyBfUJwBwbtD6_DkvYetkWMGjg/) that the security goals are already covered in our list. Hence, I prefer to go with the design that is undergoing thorough formal analysis rather than going for a completely new design.",
          "createdAt": "2025-10-15T17:02:18Z",
          "updatedAt": "2025-10-15T17:02:18Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDON6zrys7IP96m",
      "title": "Ahmed's proposal (cnf claim)",
      "url": "https://github.com/tls-attestation/exported-attestation/issues/27",
      "state": "CLOSED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Part of discussion in the [thread](https://mailarchive.ietf.org/arch/msg/attested-tls/IYPz5RGj3WnjruWEVUzkwjH7cmQ/):\n\n> With cnf, the attestation includes the public TLS key. The Verifier can verify that the presented session key matches what\u2019s in the evidence, ensuring that the entity being attested is the one actually controlling the TLS connection.\n>  \n>  \n> Which is what I believe is what you and I are looking for:\n> It is only the platform/TCB that could have produced the evidence given it is the only place where the attestation key exists.\n> This attested evidence was indeed carried out by this specific session and this specific TLS key.\n>  \n> This addresses both conditions you mentioned:\n>  \n> The physical platform is in control of the TCB\n> The TLS session terminates in a target environment/VM with the expected measurements\n> And it avoids the ambiguity about who issued the certificate, since trust is anchored directly in the attestation evidence itself, not in external PKI.\n> This same approach is already used in:\n> OAuth 2.0 DPoP ([RFC 9449]) \u2014 to bind tokens to client-held keys\n> ACE-OAuth ([RFC 9200]) \u2014 to enforce PoP in constrained IoT environments using CWT and cnf\n> I think that the design is clear, secure, and available and would provide the missing link between attestation evidence and session key ownership for TLS EXPAT. I hope this clarifies it better.",
      "createdAt": "2025-08-27T14:38:45Z",
      "updatedAt": "2025-10-15T17:01:21Z",
      "closedAt": "2025-10-15T17:01:21Z",
      "comments": [
        {
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is out of context. If this is part of a public mail thread, please include a link.",
          "createdAt": "2025-08-29T01:09:25Z",
          "updatedAt": "2025-08-29T01:09:25Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "added link. I aslo don't understand what security goal it achieves, and in what ways it is better than our proposal.",
          "createdAt": "2025-08-29T05:52:40Z",
          "updatedAt": "2025-08-29T05:52:40Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "Ahmed [agreed on the list](https://mailarchive.ietf.org/arch/msg/seal/gIyBfUJwBwbtD6_DkvYetkWMGjg/) that the security goals are already covered in our list. Hence, I prefer to go with the design that is undergoing thorough formal analysis rather than going for a completely new design.",
          "createdAt": "2025-10-15T17:01:21Z",
          "updatedAt": "2025-10-15T17:01:21Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDON6zrys6L9C9e",
      "title": "Initial review of Introduction",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/1",
      "state": "MERGED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- I tend to disagree with the following sentence because the role of Verifier is the same in both models. It depends on the order of data flow. \r\n> These interactions can follow different models, such as the passport or background check model, depending on the role of a verifier in the system.\r\n- The text regarding RFC 9261 in the draft was very confusing to me. Particularly, we need to distinguish between Exported Authenticator and Authenticator Request. I made some initial changes. Please check. ",
      "createdAt": "2025-02-20T20:28:31Z",
      "updatedAt": "2025-03-02T11:02:11Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "c85e856f7c4528d8887fc19135e75319ec815aab",
      "headRepository": "muhammad-usama-sardar/exported-attestation",
      "headRefName": "main",
      "headRefOid": "c53cb2e20d491607b5e9f64a130d504db6961046",
      "closedAt": "2025-03-02T11:02:11Z",
      "mergedAt": "2025-03-02T11:02:11Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "34f9d098a9b9f7f820712f14af99da84faf01da7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDON6zrys6MXV3r",
      "title": "More security considerations",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/3",
      "state": "MERGED",
      "author": "yaronf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is not very polished, but there are security considerations to do with attestation at the application level.",
      "createdAt": "2025-02-24T23:10:22Z",
      "updatedAt": "2025-03-02T11:04:06Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "34f9d098a9b9f7f820712f14af99da84faf01da7",
      "headRepository": "yaronf/exported-attestation",
      "headRefName": "main",
      "headRefOid": "f79c3646ec5cb47c7b0cc43e37d2b0041d4f7ca4",
      "closedAt": "2025-03-02T11:04:06Z",
      "mergedAt": "2025-03-02T11:04:06Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "d7a5d1b9dfd46450ce450b163cb0a1a010d4759d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDON6zrys6NE1Is",
      "title": "Remove trailing space - get lint to pass",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/4",
      "state": "MERGED",
      "author": "yaronf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-02T21:19:59Z",
      "updatedAt": "2025-03-03T05:55:25Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "06b1e23863495f4ac8561b7c7f29f3365a5c4ff9",
      "headRepository": "yaronf/exported-attestation",
      "headRefName": "main",
      "headRefOid": "5fea5c51b03dec5b76117f05cf32540557c0b1ea",
      "closedAt": "2025-03-03T05:55:24Z",
      "mergedAt": "2025-03-03T05:55:24Z",
      "mergedBy": "muhammad-usama-sardar",
      "mergeCommit": {
        "oid": "d27d58bffe9dbb2e84c8ded55fd28bb850cc9875"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "PR_kwDON6zrys6NHMCk",
      "title": "Rename draft in README",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/5",
      "state": "MERGED",
      "author": "yaronf",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T08:21:09Z",
      "updatedAt": "2025-03-03T08:47:11Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "d27d58bffe9dbb2e84c8ded55fd28bb850cc9875",
      "headRepository": "yaronf/exported-attestation",
      "headRefName": "patch-1",
      "headRefOid": "e662a46b5defdfbb1c8537b08a11502727ccc9c9",
      "closedAt": "2025-03-03T08:47:11Z",
      "mergedAt": "2025-03-03T08:47:11Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "5137378f477ec04f4904665bc0690a87f2591723"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6eKBuL",
          "commit": {
            "abbreviatedOid": "e662a46"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T08:47:02Z",
          "updatedAt": "2025-03-03T08:47:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDON6zrys6NISGC",
      "title": "Authors++",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/6",
      "state": "MERGED",
      "author": "ionut-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Adding myself as author",
      "createdAt": "2025-03-03T10:27:34Z",
      "updatedAt": "2025-03-03T11:00:52Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "71506d5b1d35d14cc616a3e7558156d3d24a2d0e",
      "headRepository": "ionut-arm/exported-attestation",
      "headRefName": "patch-1",
      "headRefOid": "cac90e93b04f3cd599924c6de966439e9ed5219c",
      "closedAt": "2025-03-03T11:00:52Z",
      "mergedAt": "2025-03-03T11:00:52Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "6baae779c9a8fd780586bcbd5b754326830d3658"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 9,
      "id": "PR_kwDON6zrys6NKmCe",
      "title": "Dedicated attestation keys",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/9",
      "state": "MERGED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Dedicated attestation keys\r\n- -Ionut +Chris in ACK",
      "createdAt": "2025-03-03T14:57:25Z",
      "updatedAt": "2025-03-03T15:22:04Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "99d462ef8c37b3021a1cb06fd55c07228f612b9c",
      "headRepository": "muhammad-usama-sardar/exported-attestation",
      "headRefName": "main",
      "headRefOid": "2e3d49cb5b799e39e0d7784829fa67b60b55dd64",
      "closedAt": "2025-03-03T15:01:10Z",
      "mergedAt": "2025-03-03T15:01:10Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "2b4d72caf562e705ee7ccc89725bcdd9230e3f6b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6eNsjy",
          "commit": {
            "abbreviatedOid": "1259945"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:00:48Z",
          "updatedAt": "2025-03-03T15:00:48Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nThis document inherits the security considerations of RFC 9261 and RFC 9334. The integrity of the exported authenticators must be guaranteed, and any failure in validating Evidence SHOULD be treated as a fatal error in the communication channel. Additionally, in order to benefit from remote attestation, it is recommended that Evidence MUST be protected using dedicated attestation keys chaining back to a trust anchor. This trust anchor will typically be provided by the hardware manufacturer.\r\n```",
              "createdAt": "2025-03-03T15:00:48Z",
              "updatedAt": "2025-03-03T15:00:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6eNxy7",
          "commit": {
            "abbreviatedOid": "2e3d49c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:08:28Z",
          "updatedAt": "2025-03-03T15:08:29Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "we either recommend or require.  doing both is confusing.",
              "createdAt": "2025-03-03T15:08:28Z",
              "updatedAt": "2025-03-03T15:08:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6eN7dy",
          "commit": {
            "abbreviatedOid": "2e3d49c"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:19:59Z",
          "updatedAt": "2025-03-03T15:19:59Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I will go for the latter. In my analysis, once the TIK is lost, an unprotected (e.g., unsigned) evidence is available to the adversary. Hence, remote attestation does not bring any security benefit in this case. One might argue it is even worse than standard TLS because using ephemeral key breaks the authentication property as well (something still to be argued more formally).",
              "createdAt": "2025-03-03T15:19:59Z",
              "updatedAt": "2025-03-03T15:19:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6eN841",
          "commit": {
            "abbreviatedOid": "2e3d49c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:22:04Z",
          "updatedAt": "2025-03-03T15:22:04Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "makes sense to require.",
              "createdAt": "2025-03-03T15:22:04Z",
              "updatedAt": "2025-03-03T15:22:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDON6zrys6NK4Ao",
      "title": "Require rather than recommend",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/10",
      "state": "MERGED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- based on Thomas review",
      "createdAt": "2025-03-03T15:28:58Z",
      "updatedAt": "2025-05-01T17:54:55Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "2b4d72caf562e705ee7ccc89725bcdd9230e3f6b",
      "headRepository": "muhammad-usama-sardar/exported-attestation",
      "headRefName": "main",
      "headRefOid": "7b4b19bbfdbedbf0fd27d1c59935ec8d931354fd",
      "closedAt": "2025-05-01T17:54:55Z",
      "mergedAt": "2025-05-01T17:54:55Z",
      "mergedBy": "muhammad-usama-sardar",
      "mergeCommit": {
        "oid": "f0306e88c312f36e4426a398f23b1e90f8d775a1"
      },
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "This small PR has been pending for 2 months. I will merge it tomorrow unless someone objects. ",
          "createdAt": "2025-04-30T18:13:43Z",
          "updatedAt": "2025-04-30T18:13:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6eODNc",
          "commit": {
            "abbreviatedOid": "c79759b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T15:31:11Z",
          "updatedAt": "2025-03-03T15:31:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys6nc3fH",
          "commit": {
            "abbreviatedOid": "f54b98a"
          },
          "author": "ionut-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-05-01T08:35:33Z",
          "updatedAt": "2025-05-01T08:36:04Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This is incorrect now \ud83d\ude1b In case you're willing to make this change too",
              "createdAt": "2025-05-01T08:35:33Z",
              "updatedAt": "2025-05-01T08:36:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6ndpKK",
          "commit": {
            "abbreviatedOid": "f54b98a"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-05-01T10:12:38Z",
          "updatedAt": "2025-05-01T10:12:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys6ngmiG",
          "commit": {
            "abbreviatedOid": "f54b98a"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-01T17:54:10Z",
          "updatedAt": "2025-05-01T17:54:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Fixed, thanks. ",
              "createdAt": "2025-05-01T17:54:11Z",
              "updatedAt": "2025-05-01T17:54:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDON6zrys6REkpO",
      "title": "Updates to the draft",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/12",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-02T11:12:21Z",
      "updatedAt": "2025-05-02T06:54:26Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "2b4d72caf562e705ee7ccc89725bcdd9230e3f6b",
      "headRepository": "tireddy2/exported-attestation",
      "headRefName": "tireddy2-patch-1",
      "headRefOid": "aa8170be4d7f81b25aae6bd454f1941bd2636399",
      "closedAt": "2025-05-02T06:54:25Z",
      "mergedAt": "2025-05-02T06:54:25Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "ab99fa3a701f43041317bbab38106905449562ab"
      },
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "What prevents a malicious Attester from relaying the `certificate_request_context` to a genuine TEE and presenting the Evidence of that genuine TEE?\r\nThis question is not specific to `certificate_request_context` but applies in general to the draft (i.e., also to nonce, timestamp, epoch markers etc.).",
          "createdAt": "2025-04-30T18:37:03Z",
          "updatedAt": "2025-04-30T18:37:03Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "> What prevents a malicious Attester from relaying the `certificate_request_context` to a genuine TEE and presenting the Evidence of that genuine TEE?\r\n> This question is not specific to `certificate_request_context` but applies in general to the draft (i.e., also to nonce, timestamp, epoch markers etc.).\r\n\r\nGood question, one possible technique could be that the verifier will have to enforce policies that ensure the TEE producing the evidence is the one it expects, not just any valid TEE.",
          "createdAt": "2025-05-01T10:06:08Z",
          "updatedAt": "2025-05-01T10:06:08Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "> Good question, one possible technique could be that the verifier will have to enforce policies that ensure the TEE producing the evidence is the one it expects, not just any valid TEE.\r\n\r\nI am very skeptical of putting things into policies. Such policies are likely to be forgotten. So if we have no good answer, we should maybe put it in security considerations. But I can open a separate issue on this as it is not specific to this PR (and applies to older draft with nonce as well). \r\n\r\nIn general, this PR looks good to me. Would like to have a short discussion to understand a couple of things in the next meeting, otherwise it's good to merge. ",
          "createdAt": "2025-05-01T18:04:46Z",
          "updatedAt": "2025-05-01T18:04:46Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Good question, one possible technique could be that the verifier will have to enforce policies that ensure the TEE producing the evidence is the one it expects, not just any valid TEE.\r\n> \r\n> I am very skeptical of putting things into policies. Such policies are likely to be forgotten. So if we have no good answer, we should maybe put it in security considerations. But I can open a separate issue on this as it is not specific to this PR (and applies to older draft with nonce as well).\r\n\r\nplease raise a PR for this issue, it needs to be discussed.\r\n\r\n> \r\n> In general, this PR looks good to me. Would like to have a short discussion to understand a couple of things in the next meeting, otherwise it's good to merge.\r\n\r\nThanks, I will merge the PR.\r\n",
          "createdAt": "2025-05-02T06:53:18Z",
          "updatedAt": "2025-05-02T06:53:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6jqTHe",
          "commit": {
            "abbreviatedOid": "e53528c"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T07:29:06Z",
          "updatedAt": "2025-04-07T07:29:06Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "In my reading of RFC 9261, Authenticator consists of Certificate, CertificateVerify, and Finished messages and not Certificate message alone. Please correct me if I am wrong. ",
              "createdAt": "2025-04-07T07:29:06Z",
              "updatedAt": "2025-04-07T07:29:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6jqbbU",
          "commit": {
            "abbreviatedOid": "e53528c"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T07:41:07Z",
          "updatedAt": "2025-04-07T07:41:07Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "[Sec 5.2](https://datatracker.ietf.org/doc/html/rfc9261#section-5.2)\r\n> An authenticator is formed from the concatenation of TLS 1.3 Certificate, CertificateVerify, and Finished messages [[RFC8446](https://datatracker.ietf.org/doc/html/rfc8446)].\r\n\r\nand [5.2.4](https://datatracker.ietf.org/doc/html/rfc9261#section-5.2.4)\r\n> Certificate || CertificateVerify || Finished",
              "createdAt": "2025-04-07T07:41:07Z",
              "updatedAt": "2025-04-07T07:41:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6jqn2R",
          "commit": {
            "abbreviatedOid": "e53528c"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T07:59:43Z",
          "updatedAt": "2025-04-07T07:59:44Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Fixed",
              "createdAt": "2025-04-07T07:59:43Z",
              "updatedAt": "2025-04-07T07:59:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6jtmwa",
          "commit": {
            "abbreviatedOid": "baa5899"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T12:27:41Z",
          "updatedAt": "2025-04-07T12:27:41Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "An editorial note: Ideally, RATS CMW should only introduce what it is. It should not mention RFC9261 or try to do any combination of specifications, since the text above says: \r\n> This document builds upon three foundational specifications:",
              "createdAt": "2025-04-07T12:27:41Z",
              "updatedAt": "2025-04-07T12:27:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6jt-jB",
          "commit": {
            "abbreviatedOid": "baa5899"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T13:01:00Z",
          "updatedAt": "2025-04-07T13:01:00Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "The last two lines are supposed to be in a separate paragraph, fixed it. ",
              "createdAt": "2025-04-07T13:01:00Z",
              "updatedAt": "2025-04-07T13:01:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6kuVU-",
          "commit": {
            "abbreviatedOid": "90030c5"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-14T08:51:39Z",
          "updatedAt": "2025-04-14T08:51:39Z",
          "comments": [
            {
              "originalPosition": 218,
              "body": "I think Authenticator Request does not have any freshness. Why is the nonce removed? How is evidence freshness ensured?",
              "createdAt": "2025-04-14T08:51:39Z",
              "updatedAt": "2025-04-14T08:51:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6kx2DZ",
          "commit": {
            "abbreviatedOid": "90030c5"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-14T14:23:50Z",
          "updatedAt": "2025-04-14T14:23:50Z",
          "comments": [
            {
              "originalPosition": 218,
              "body": "In this case, freshness is inherently provided by the certificate_request_context in the authenticator request.  A certificate_request_context value MUST be unique for each authenticator request within the scope of a connection.",
              "createdAt": "2025-04-14T14:23:50Z",
              "updatedAt": "2025-04-14T14:23:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6lVe3y",
          "commit": {
            "abbreviatedOid": "90030c5"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-16T21:13:26Z",
          "updatedAt": "2025-04-16T21:13:26Z",
          "comments": [
            {
              "originalPosition": 218,
              "body": "okay, that sounds fine to me. ",
              "createdAt": "2025-04-16T21:13:26Z",
              "updatedAt": "2025-04-16T21:13:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6lVf-H",
          "commit": {
            "abbreviatedOid": "90030c5"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-16T21:16:05Z",
          "updatedAt": "2025-04-16T21:16:06Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "Minor editorial: to be consistent with `Authenticator Request (ClientCertReq)`, I'll propose \r\n`Exported Authenticator (Certificate with cmw_attestation, CertificateVerify, Finished)`",
              "createdAt": "2025-04-16T21:16:06Z",
              "updatedAt": "2025-04-16T21:16:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6lkL0N",
          "commit": {
            "abbreviatedOid": "90030c5"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-18T06:23:06Z",
          "updatedAt": "2025-04-18T06:23:06Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "Fixed. ",
              "createdAt": "2025-04-18T06:23:06Z",
              "updatedAt": "2025-04-18T06:23:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6m85H_",
          "commit": {
            "abbreviatedOid": "978afcb"
          },
          "author": "ionut-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Great stuff, thank you!",
          "createdAt": "2025-04-28T21:18:31Z",
          "updatedAt": "2025-04-28T21:29:08Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "This line specifically calls out attestation evidence instead of attestation information (like in line 110). Is this on purpose? I can see that line 136 also carries on with background check only.\r\n\r\nNote: maybe we can keep a consistent terminology and use `remote attestation credentials` or `attestation credentials`, like the other draft. \"Attestation information\" seems a bit more vague.",
              "createdAt": "2025-04-28T21:18:32Z",
              "updatedAt": "2025-04-28T21:29:08Z"
            },
            {
              "originalPosition": 131,
              "body": "`Background Check Model` here, and `Passport Model` on line 161.\r\n\r\nSame for lines 170 and 175.",
              "createdAt": "2025-04-28T21:20:50Z",
              "updatedAt": "2025-04-28T21:29:08Z"
            },
            {
              "originalPosition": 154,
              "body": "Could we collapse this and the same write-up from above, and use `relying party` and `attester`, and just say that each of the roles are fulfilled by one or both parties?",
              "createdAt": "2025-04-28T21:23:43Z",
              "updatedAt": "2025-04-28T21:29:08Z"
            },
            {
              "originalPosition": 161,
              "body": "Similar to the section on `Usage in Post-Handshake Authentication`, this seems to be specific to evidence and I'm not sure if this is on purpose and the passport model is skipped for some unspecified reason? (old text seems to mention both)",
              "createdAt": "2025-04-28T21:25:35Z",
              "updatedAt": "2025-04-28T21:29:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6nBmEr",
          "commit": {
            "abbreviatedOid": "978afcb"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-29T06:41:40Z",
          "updatedAt": "2025-04-29T06:41:40Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "Thanks, updated to use \"attestation credentials\".",
              "createdAt": "2025-04-29T06:41:40Z",
              "updatedAt": "2025-04-29T06:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6nBpdJ",
          "commit": {
            "abbreviatedOid": "978afcb"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-29T06:45:19Z",
          "updatedAt": "2025-04-29T06:45:19Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Good catch, fixed. ",
              "createdAt": "2025-04-29T06:45:19Z",
              "updatedAt": "2025-04-29T06:45:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6nB2Eg",
          "commit": {
            "abbreviatedOid": "978afcb"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-29T06:57:08Z",
          "updatedAt": "2025-04-29T06:57:09Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "Good point, fixed. ",
              "createdAt": "2025-04-29T06:57:08Z",
              "updatedAt": "2025-04-29T06:57:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6nCHYc",
          "commit": {
            "abbreviatedOid": "978afcb"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-29T07:28:46Z",
          "updatedAt": "2025-04-29T07:28:46Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Thanks, fixed. ",
              "createdAt": "2025-04-29T07:28:46Z",
              "updatedAt": "2025-04-29T07:28:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDON6zrys6VEQ6L",
      "title": "Update links in README.md",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/16",
      "state": "MERGED",
      "author": "ionut-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-06T09:01:26Z",
      "updatedAt": "2025-05-06T09:05:20Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "ab99fa3a701f43041317bbab38106905449562ab",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "editors-draft-link",
      "headRefOid": "07dd7e4cb59e772527b9fb2af2ec0bc82b200620",
      "closedAt": "2025-05-06T09:05:20Z",
      "mergedAt": "2025-05-06T09:05:20Z",
      "mergedBy": "muhammad-usama-sardar",
      "mergeCommit": {
        "oid": "040018b940bcc6dcd98c926db74e6fbbed325516"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 17,
      "id": "PR_kwDON6zrys6WURLv",
      "title": "Updated draft for clarity on the new extension",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/17",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-15T12:02:21Z",
      "updatedAt": "2025-05-19T12:24:04Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "95b0210cae0ebc4f9ea15dd8871b9d749c239571",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "tireddy2-patch-1",
      "headRefOid": "4d3cfbb4d4f531122e9c3c4d28a13e1888785387",
      "closedAt": "2025-05-19T12:24:04Z",
      "mergedAt": "2025-05-19T12:24:04Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "ca1d70e1a38059e8171803fb59136ed906e1e13d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6pxsOR",
          "commit": {
            "abbreviatedOid": "e4be943"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "needs some clarity on attested CSR",
          "createdAt": "2025-05-17T19:02:47Z",
          "updatedAt": "2025-05-17T19:44:20Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Which \"attestation information\": Evidence or Attestation Results?",
              "createdAt": "2025-05-17T19:02:47Z",
              "updatedAt": "2025-05-17T19:44:20Z"
            },
            {
              "originalPosition": 27,
              "body": "s/an sequence/a sequence",
              "createdAt": "2025-05-17T19:08:41Z",
              "updatedAt": "2025-05-17T19:44:20Z"
            },
            {
              "originalPosition": 25,
              "body": "Editorial: This paragraph breaks the flow. Preferably move this paragraph to the end of this section. ",
              "createdAt": "2025-05-17T19:10:06Z",
              "updatedAt": "2025-05-17T19:44:20Z"
            },
            {
              "originalPosition": 45,
              "body": "While the older statement was meant to be for both background check and passport model, I think the new text on CSR attestation is applicable only for passport model. ",
              "createdAt": "2025-05-17T19:31:08Z",
              "updatedAt": "2025-05-17T19:44:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6pzqNQ",
          "commit": {
            "abbreviatedOid": "e4be943"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-18T10:50:34Z",
          "updatedAt": "2025-05-18T10:50:34Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Evidence or Attestation Results, updated text. ",
              "createdAt": "2025-05-18T10:50:34Z",
              "updatedAt": "2025-05-18T10:50:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6pzqN5",
          "commit": {
            "abbreviatedOid": "e4be943"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-18T10:50:43Z",
          "updatedAt": "2025-05-18T10:50:44Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Fixed.",
              "createdAt": "2025-05-18T10:50:44Z",
              "updatedAt": "2025-05-18T10:50:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6pzqPF",
          "commit": {
            "abbreviatedOid": "e4be943"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-18T10:51:02Z",
          "updatedAt": "2025-05-18T10:51:03Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Agreed, moved paragraph. ",
              "createdAt": "2025-05-18T10:51:03Z",
              "updatedAt": "2025-05-18T10:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6pzqP1",
          "commit": {
            "abbreviatedOid": "e4be943"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-18T10:51:14Z",
          "updatedAt": "2025-05-18T10:51:14Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Good catch, fixed. ",
              "createdAt": "2025-05-18T10:51:14Z",
              "updatedAt": "2025-05-18T10:51:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDON6zrys6dFkwN",
      "title": "Small editorial changes",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/18",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-02T13:33:59Z",
      "updatedAt": "2025-07-03T10:23:54Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "ae83822ad14806e01380297e6b65d41ada0a1659",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "minima-aeditoria",
      "headRefOid": "0982fb3d4656646e6604c50af5223dcc8d50295c",
      "closedAt": "2025-07-03T10:23:54Z",
      "mergedAt": "2025-07-03T10:23:54Z",
      "mergedBy": "ionut-arm",
      "mergeCommit": {
        "oid": "58dcfcb6793fd5db33e2e8e11279840ca1ec5174"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6xlE23",
          "commit": {
            "abbreviatedOid": "9121eff"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-02T13:59:11Z",
          "updatedAt": "2025-07-02T13:59:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys6xlWQ_",
          "commit": {
            "abbreviatedOid": "9121eff"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T14:18:12Z",
          "updatedAt": "2025-07-02T14:18:13Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "A bit hard to digest. Prefer to simplify the construction: \r\n`This document introduces an extension, namely cmw_attestation, to the TLS Certificate message which ... `",
              "createdAt": "2025-07-02T14:18:12Z",
              "updatedAt": "2025-07-02T14:18:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6xleLf",
          "commit": {
            "abbreviatedOid": "9121eff"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T14:26:11Z",
          "updatedAt": "2025-07-02T14:26:11Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document introduces a new TLS certificate message extension called cmw_attestation.\r\nThis extension allows Attestation Evidence or Attestation Results to be included in the extensions field of the end-entity certificate in the TLS Certificate message.\r\n```",
              "createdAt": "2025-07-02T14:26:11Z",
              "updatedAt": "2025-07-02T14:26:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6xlfQR",
          "commit": {
            "abbreviatedOid": "9121eff"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T14:27:20Z",
          "updatedAt": "2025-07-02T14:27:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yeah, that\u2019s pretty hefty.  See [0982fb3](https://github.com/tls-attestation/exported-attestation/pull/18/commits/0982fb3d4656646e6604c50af5223dcc8d50295c)",
              "createdAt": "2025-07-02T14:27:21Z",
              "updatedAt": "2025-07-02T14:27:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6xlkVy",
          "commit": {
            "abbreviatedOid": "9121eff"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-02T14:32:54Z",
          "updatedAt": "2025-07-02T14:32:54Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "LGTM, thank you! ",
              "createdAt": "2025-07-02T14:32:54Z",
              "updatedAt": "2025-07-02T14:32:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6xlqoL",
          "commit": {
            "abbreviatedOid": "0982fb3"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-07-02T14:39:18Z",
          "updatedAt": "2025-07-02T14:39:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys6xnL74",
          "commit": {
            "abbreviatedOid": "0982fb3"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-02T16:23:53Z",
          "updatedAt": "2025-07-02T16:23:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys6xxiTw",
          "commit": {
            "abbreviatedOid": "0982fb3"
          },
          "author": "ionut-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-03T10:01:24Z",
          "updatedAt": "2025-07-03T10:01:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDON6zrys6dPkh-",
      "title": "Update 'latest' link in draft",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/19",
      "state": "MERGED",
      "author": "ionut-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-03T10:31:07Z",
      "updatedAt": "2025-07-03T11:03:15Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "58dcfcb6793fd5db33e2e8e11279840ca1ec5174",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "editors-draft-link-1",
      "headRefOid": "b098f7b4b0582fd5f40ff738fee90886eed574e0",
      "closedAt": "2025-07-03T10:47:45Z",
      "mergedAt": "2025-07-03T10:47:45Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "0bfa1e58095bc2c571b16a3618038a6f1b51df91"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6xyEDN",
          "commit": {
            "abbreviatedOid": "b098f7b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-03T10:47:37Z",
          "updatedAt": "2025-07-03T10:47:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDON6zrys6e2IWr",
      "title": "CMW Extension and terminology",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/20",
      "state": "MERGED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Terminology and Capitalization of terms\r\n- CMW applies only to Certificate message of Authenticator",
      "createdAt": "2025-07-14T17:58:21Z",
      "updatedAt": "2025-08-04T09:33:58Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "0bfa1e58095bc2c571b16a3618038a6f1b51df91",
      "headRepository": "muhammad-usama-sardar/exported-attestation",
      "headRefName": "main",
      "headRefOid": "7fb9d74a4110973c0f52b721b1a1a75698975f9f",
      "closedAt": "2025-08-04T09:33:58Z",
      "mergedAt": "2025-08-04T09:33:58Z",
      "mergedBy": "muhammad-usama-sardar",
      "mergeCommit": {
        "oid": "f9b2414fc67577bf053672e3bb9cae6f6e103a4c"
      },
      "comments": [
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig @ionut-arm could you please have a look? ",
          "createdAt": "2025-07-17T15:29:01Z",
          "updatedAt": "2025-07-17T15:29:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys6z4KvE",
          "commit": {
            "abbreviatedOid": "05a9243"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-07-14T21:05:59Z",
          "updatedAt": "2025-07-14T21:08:43Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "It's never a good idea to depend on another I-D. Unless \"bis\" adds something important here, let's keep the dependency on the original RFC.",
              "createdAt": "2025-07-14T21:05:59Z",
              "updatedAt": "2025-07-14T21:08:43Z"
            },
            {
              "originalPosition": 76,
              "body": "Same as above, keep 8446.",
              "createdAt": "2025-07-14T21:08:05Z",
              "updatedAt": "2025-07-14T21:08:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6z8RmP",
          "commit": {
            "abbreviatedOid": "05a9243"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-15T06:50:00Z",
          "updatedAt": "2025-07-15T06:50:00Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Not sure about such a strong statement as \"never\". At least I have one recent counterexample [here](https://mailarchive.ietf.org/arch/msg/tls/rUK8UrkREY025QMDuDPOXHma_Ek/) from the AD review of 8773bis: \r\n\r\n> Update all references of RFC8446 to 8446bis \r\n\r\nAlso, 8446bis has had several last calls.",
              "createdAt": "2025-07-15T06:50:00Z",
              "updatedAt": "2025-07-15T06:50:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6z8253",
          "commit": {
            "abbreviatedOid": "05a9243"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-15T07:33:30Z",
          "updatedAt": "2025-07-15T07:53:23Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "This (and all the other instances of the same phrase) sounds odd.\r\n\r\nI suggest replacing \u201c_to Certificate Message of Authenticator_\u201d with \u201c_to the Authenticator's Certificate message_\"",
              "createdAt": "2025-07-15T07:33:30Z",
              "updatedAt": "2025-07-15T07:53:23Z"
            },
            {
              "originalPosition": 42,
              "body": "I agree with Yaron. Unless the BIS contains information we rely on critically, there is no reason to change the reference until RFC8446 becomes obsolete (which will happen as soon as the BIS gets its RFC number).\r\n\r\nThe typical way to address this in kramdown-rfc is to create an alias, e.g.:\r\n```\r\nRFC8446: tls13\r\n```\r\nand move the concrete reference when obsoletion kicks in:\r\n```\r\nRFCXXXX: tls13\r\n```\r\n",
              "createdAt": "2025-07-15T07:43:46Z",
              "updatedAt": "2025-07-15T07:53:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6z_nLL",
          "commit": {
            "abbreviatedOid": "05a9243"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-15T11:00:37Z",
          "updatedAt": "2025-07-15T11:00:38Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Are you sure? Seems to me this should be:\r\n\r\n`tls13: RFC8446`",
              "createdAt": "2025-07-15T11:00:37Z",
              "updatedAt": "2025-07-15T11:00:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys60AMsa",
          "commit": {
            "abbreviatedOid": "05a9243"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-15T11:45:56Z",
          "updatedAt": "2025-07-15T11:45:56Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I believe it is as I suggested above.  Then, in the markdown, you reference as `{{-tls13}}`.  See, for example, https://github.com/ietf-rats-wg/draft-ietf-rats-reference-interaction-models/pull/71/files",
              "createdAt": "2025-07-15T11:45:56Z",
              "updatedAt": "2025-07-15T11:45:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys60BrO1",
          "commit": {
            "abbreviatedOid": "8de4729"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-15T13:32:55Z",
          "updatedAt": "2025-07-15T13:32:56Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nAs defined in {{Section 4.4.2 of -tls13}}, the TLS Certificate message consists of a certificate_list, which is a sequence of CertificateEntry structures. Each CertificateEntry contains a certificate and a set of associated extensions. The cmw_attestation extension MUST appear only in the first CertificateEntry of the Certificate message and applies exclusively to the end-entity certificate. It MUST NOT be included in entries corresponding to intermediate or trust anchor certificates. This design ensures that attestation information is tightly bound to the entity being authenticated.\r\n```",
              "createdAt": "2025-07-15T13:32:56Z",
              "updatedAt": "2025-07-15T13:32:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys60iMrH",
          "commit": {
            "abbreviatedOid": "c8d227b"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-17T10:10:02Z",
          "updatedAt": "2025-07-17T10:10:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys60iRHi",
          "commit": {
            "abbreviatedOid": "c8d227b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-17T10:14:21Z",
          "updatedAt": "2025-07-17T10:14:22Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "This breaks the build:\r\n\r\n```suggestion\r\n- Certificate validation (e.g., signature verification, revocation checks) MUST still be performed according to TLS {{-tls13}} and PKIX {{!RFC5280}}.\r\n```",
              "createdAt": "2025-07-17T10:14:21Z",
              "updatedAt": "2025-07-17T10:14:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys60iguU",
          "commit": {
            "abbreviatedOid": "7fb9d74"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-17T10:34:39Z",
          "updatedAt": "2025-07-17T10:34:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDON6zrys6h9zUg",
      "title": "Remove misleading \"Finished\" message (Fixes #21)",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/25",
      "state": "MERGED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Remove misleading \"Finished\" message from Verifier to server in passport model",
      "createdAt": "2025-08-04T09:37:38Z",
      "updatedAt": "2025-09-10T15:32:30Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "f9b2414fc67577bf053672e3bb9cae6f6e103a4c",
      "headRepository": "muhammad-usama-sardar/exported-attestation",
      "headRefName": "main",
      "headRefOid": "e226ea448efad5b2495169d74beeb6dda019d5a9",
      "closedAt": "2025-09-10T15:32:29Z",
      "mergedAt": "2025-09-10T15:32:29Z",
      "mergedBy": "muhammad-usama-sardar",
      "mergeCommit": {
        "oid": "29a78ed52634255177849b98ccab6df8e76020e8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys63yZIb",
          "commit": {
            "abbreviatedOid": "e226ea4"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-08-04T09:43:48Z",
          "updatedAt": "2025-08-04T09:43:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I take it there's no `Finished` from Server to Client?",
              "createdAt": "2025-08-04T09:43:48Z",
              "updatedAt": "2025-08-04T09:43:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys63ybXQ",
          "commit": {
            "abbreviatedOid": "e226ea4"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-04T09:46:52Z",
          "updatedAt": "2025-08-04T09:46:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> there's no Finished from Server to Client?\r\n\r\nYes, there is no Finished from Server to Client in post-handshake exchange based on RFC9261 (unless Server is the Attester). ",
              "createdAt": "2025-08-04T09:46:52Z",
              "updatedAt": "2025-08-04T09:46:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys6_HEfc",
          "commit": {
            "abbreviatedOid": "e226ea4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-10T13:58:08Z",
          "updatedAt": "2025-09-10T13:58:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 28,
      "id": "PR_kwDON6zrys6qBclc",
      "title": "Security and privacy considerations",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/28",
      "state": "MERGED",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From older draft with some updates",
      "createdAt": "2025-09-23T08:59:29Z",
      "updatedAt": "2025-10-20T16:32:37Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "84715d374dfcfe793ff57cee8eb08aa44bf90162",
      "headRepository": "muhammad-usama-sardar/exported-attestation",
      "headRefName": "main",
      "headRefOid": "540392034aa60922357092c4247d7c3c47af93e5",
      "closedAt": "2025-10-20T16:32:37Z",
      "mergedAt": "2025-10-20T16:32:37Z",
      "mergedBy": "muhammad-usama-sardar",
      "mergeCommit": {
        "oid": "c2b014c77c5f3ff3073f1cb1612d446a61098248"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "The build is currently broken.  I\u2019ll push a fix shortly, please avoid pushing further commits in the meantime.  Thanks!",
          "createdAt": "2025-10-15T12:45:43Z",
          "updatedAt": "2025-10-15T12:45:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys7DajMr",
          "commit": {
            "abbreviatedOid": "189cb33"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-29T08:28:42Z",
          "updatedAt": "2025-09-29T08:28:42Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "ref fix\r\n\r\n```suggestion\r\nThe Evidence carried in cmw_attestation does not require an additional freshness mechanism, such as a nonce {{RA-TLS}} or timestamp, since freshness is inherently provided by the certificate_request_context in the authenticator request.\r\n```",
              "createdAt": "2025-09-29T08:28:42Z",
              "updatedAt": "2025-09-29T08:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7Damrv",
          "commit": {
            "abbreviatedOid": "189cb33"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-29T08:32:33Z",
          "updatedAt": "2025-09-29T08:32:33Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "While this information is good and useful, I don't think it belongs here.  Let's move it to the appendix or another document.",
              "createdAt": "2025-09-29T08:32:33Z",
              "updatedAt": "2025-09-29T08:32:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7HFc-c",
          "commit": {
            "abbreviatedOid": "189cb33"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-15T12:23:48Z",
          "updatedAt": "2025-10-15T12:23:48Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Moved the comparison parts to Appendix. ",
              "createdAt": "2025-10-15T12:23:48Z",
              "updatedAt": "2025-10-15T12:23:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7HGLTq",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-15T13:00:28Z",
          "updatedAt": "2025-10-15T13:00:29Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "We should give it a proper title.\r\n\r\nAs is, it renders as \u201cAppendix X. Appendix\u201d, which is not what we want.\r\n\r\nWhile you are at it, please add `{:unnumbered}` between L370 and L371.",
              "createdAt": "2025-10-15T13:00:28Z",
              "updatedAt": "2025-10-15T13:00:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7HoupE",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-17T10:25:04Z",
          "updatedAt": "2025-10-17T10:25:04Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Can you please add `Identity Key` to the terminology section? Don't think we define it anywhere.",
              "createdAt": "2025-10-17T10:25:04Z",
              "updatedAt": "2025-10-17T10:25:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7HowpM",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I've added a few minor comments, otherwise looks good.",
          "createdAt": "2025-10-17T10:26:37Z",
          "updatedAt": "2025-10-17T13:39:18Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "Is that `[RA-TLS]` at the end correct syntax? I'm probably still clueless about how this format works...",
              "createdAt": "2025-10-17T10:26:37Z",
              "updatedAt": "2025-10-17T13:39:18Z"
            },
            {
              "originalPosition": 79,
              "body": "```suggestion\r\nThe privacy implications are similar to OCSP {{-ocsp}}.\r\n```\r\n(first letter in OCSP stands for \"online\")",
              "createdAt": "2025-10-17T11:08:50Z",
              "updatedAt": "2025-10-17T13:39:18Z"
            },
            {
              "originalPosition": 93,
              "body": "Does this not apply to client-as-atteser as well (the ability to check the identity of the peer first)? Because this paragraph makes it sound like only the server can check.",
              "createdAt": "2025-10-17T13:38:02Z",
              "updatedAt": "2025-10-17T13:39:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7HtVr3",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-17T14:08:59Z",
          "updatedAt": "2025-10-17T14:08:59Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "It should be `{{RA-TLS}}`",
              "createdAt": "2025-10-17T14:08:59Z",
              "updatedAt": "2025-10-17T14:08:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7Htgh0",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-17T14:20:07Z",
          "updatedAt": "2025-10-17T14:20:08Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nIn background-check model, the Verifier not only has access to detailed information about the Attester's TCB through Evidence, but it also knows the exact time and the party (i.e., the RP) with whom the secure channel establishment is attempted {{RA-TLS}}.\r\n```",
              "createdAt": "2025-10-17T14:20:07Z",
              "updatedAt": "2025-10-17T14:20:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7Hth2K",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-17T14:21:29Z",
          "updatedAt": "2025-10-17T14:21:29Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "```suggestion\r\n# Acknowledgements\r\n{:unnumbered}\r\n\r\nWe would like to thank Chris Patton for his proposal to explore RFC 9261 for attested TLS.\r\nWe would also like to thank Paul Howard and Yogesh Deshpande for their input.\r\n\r\n# Post-handshake vs Intra-handshake Privacy\r\n```",
              "createdAt": "2025-10-17T14:21:29Z",
              "updatedAt": "2025-10-17T14:21:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7Htn5f",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-17T14:28:23Z",
          "updatedAt": "2025-10-17T14:28:24Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "```suggestion\r\nFor the case of the TLS server as the Attester, the server can ask for client authentication and only send the Evidence after successful client authentication. This limits the exposure of server's hardware-level Claims to be revealed only to authorized clients. A client running as an Attester can similarly rely on the server's authentication to limit exposure of its attestation credential to authorized servers.\r\n```",
              "createdAt": "2025-10-17T14:28:24Z",
              "updatedAt": "2025-10-17T14:28:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5Eb_",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-10-18T15:13:06Z",
          "updatedAt": "2025-10-18T15:21:22Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "I think the comparison to OCSP does not hold, because an OCSP server may be a total \"third party\", whereas the Verifier is typically strongly associated with the RP. So for example, attester-side redaction is not effective because if you don't trust the Verifier, you shouldn't trust the RP either.",
              "createdAt": "2025-10-18T15:13:06Z",
              "updatedAt": "2025-10-18T15:21:22Z"
            },
            {
              "originalPosition": 105,
              "body": "This may be true, but if the client also needs to be attested, then you have the same problem with the client's Evidence, no? And in fact from a privacy POV the client's Evidence is a lot more sensitive (because clients represent individuals more than servers do.)",
              "createdAt": "2025-10-18T15:21:05Z",
              "updatedAt": "2025-10-18T15:21:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5GPb",
          "commit": {
            "abbreviatedOid": "ff541c8"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T15:35:47Z",
          "updatedAt": "2025-10-18T15:35:48Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "> This may be true, but if the client also needs to be attested, then you have the same problem with the client's Evidence, no?\r\n\r\nThe point here is that if the client also needs to be attested, then in post-HS, the server has the opportunity to at least authenticate the client before the server sends its Evidence. In intra-HS, the server cannot apply such a filter.\r\n\r\n> And in fact from a privacy POV the client's Evidence is a lot more sensitive (because clients represent individuals more than servers do.)\r\n\r\nI agree. I will rephrase to clarify that the comparison here is from the server's view. ",
              "createdAt": "2025-10-18T15:35:47Z",
              "updatedAt": "2025-10-18T15:35:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5mlm",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T20:26:57Z",
          "updatedAt": "2025-10-18T20:26:57Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "> [\u2026] the Verifier is typically strongly associated with the RP\r\n\r\ns/typically/sometimes/",
              "createdAt": "2025-10-18T20:26:57Z",
              "updatedAt": "2025-10-18T20:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5nqv",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T20:46:04Z",
          "updatedAt": "2025-10-18T20:46:04Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "@thomas-fossati Can you give a counterexample where this makes sense, i.e. where an RP blindly trusts a Verifier even though they are not within the same trust domain?",
              "createdAt": "2025-10-18T20:46:04Z",
              "updatedAt": "2025-10-18T20:46:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5ptP",
          "commit": {
            "abbreviatedOid": "ff541c8"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T21:15:29Z",
          "updatedAt": "2025-10-18T21:15:29Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Isn't it RFC6960?",
              "createdAt": "2025-10-18T21:15:29Z",
              "updatedAt": "2025-10-18T21:15:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5puf",
          "commit": {
            "abbreviatedOid": "ff541c8"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T21:15:57Z",
          "updatedAt": "2025-10-18T21:17:28Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Agree, working on it.",
              "createdAt": "2025-10-18T21:15:57Z",
              "updatedAt": "2025-10-18T21:17:28Z"
            },
            {
              "originalPosition": 79,
              "body": "I am accepting the removal of \"online\". We can continue the discussion on the rest. ",
              "createdAt": "2025-10-18T21:16:53Z",
              "updatedAt": "2025-10-18T21:17:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5qGl",
          "commit": {
            "abbreviatedOid": "ae6bac8"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T21:24:05Z",
          "updatedAt": "2025-10-18T21:24:05Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "I think the rest of this section is about Client as Attester and only this paragraph is about Server as Attester. If you agree, I propose to add `## Server as Attester` on top of this paragraph and `## Client as Attester` in the beginning. ",
              "createdAt": "2025-10-18T21:24:05Z",
              "updatedAt": "2025-10-18T21:24:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5sRw",
          "commit": {
            "abbreviatedOid": "d8091c0"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T21:48:41Z",
          "updatedAt": "2025-10-18T21:48:41Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "Resolving it for now. Reopen if you think it is not correct. ",
              "createdAt": "2025-10-18T21:48:41Z",
              "updatedAt": "2025-10-18T21:48:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H6Yvh",
          "commit": {
            "abbreviatedOid": "d8091c0"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T06:28:21Z",
          "updatedAt": "2025-10-19T06:28:21Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "I am not aware of any deployment where session keys are stored in TEE/HSM; only the private key of the end-entity certificate will be stored in TEE.",
              "createdAt": "2025-10-19T06:28:21Z",
              "updatedAt": "2025-10-19T06:28:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H6Y3h",
          "commit": {
            "abbreviatedOid": "d8091c0"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Remove \"we\" from the proposed text. ",
          "createdAt": "2025-10-19T06:30:33Z",
          "updatedAt": "2025-10-19T06:30:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys7H8UmI",
          "commit": {
            "abbreviatedOid": "d8091c0"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T11:11:46Z",
          "updatedAt": "2025-10-19T11:11:47Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Which deployments are you aware of? Probably the ones you are aware of are doing completely different stuff.\r\n\r\n- Where is the TLS connection terminated in these deployments?\r\n",
              "createdAt": "2025-10-19T11:11:46Z",
              "updatedAt": "2025-10-19T11:11:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H833r",
          "commit": {
            "abbreviatedOid": "4b583b4"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T18:26:48Z",
          "updatedAt": "2025-10-19T18:26:48Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "It was never used in the whole draft. So instead of defining it, I tried to clarify by saying \"identity key used for TLS handshake\".",
              "createdAt": "2025-10-19T18:26:48Z",
              "updatedAt": "2025-10-19T18:26:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H9Azr",
          "commit": {
            "abbreviatedOid": "d8091c0"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T20:26:54Z",
          "updatedAt": "2025-10-19T20:26:54Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "@tireddy2 An example here would be an AWS Enclave which can run arbitrary software (basically any container) and is running a TLS stack.",
              "createdAt": "2025-10-19T20:26:54Z",
              "updatedAt": "2025-10-19T20:26:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7ICV8N",
          "commit": {
            "abbreviatedOid": "d8091c0"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-20T11:00:37Z",
          "updatedAt": "2025-10-20T11:00:37Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Got it, Thanks. ",
              "createdAt": "2025-10-20T11:00:37Z",
              "updatedAt": "2025-10-20T11:00:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7IEFzY",
          "commit": {
            "abbreviatedOid": "ba7406c"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-20T13:39:37Z",
          "updatedAt": "2025-10-20T13:43:19Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "Could you group the entries below, like [here](https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/blob/main/draft-ietf-jose-hpke-encrypt.md?plain=1#L539)",
              "createdAt": "2025-10-20T13:39:37Z",
              "updatedAt": "2025-10-20T13:43:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDON6zrys6t3i8s",
      "title": "address IANA review comments",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/29",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #22",
      "createdAt": "2025-10-15T12:02:36Z",
      "updatedAt": "2025-10-20T15:58:25Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "e13891041787bcbc384cc867813f60bf670ad092",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "iana-fixes",
      "headRefOid": "76aa29b84799a8db60115a204d0c51dd0479eae7",
      "closedAt": "2025-10-20T15:58:25Z",
      "mergedAt": "2025-10-20T15:58:25Z",
      "mergedBy": "ionut-arm",
      "mergeCommit": {
        "oid": "84715d374dfcfe793ff57cee8eb08aa44bf90162"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys7HG3TD",
          "commit": {
            "abbreviatedOid": "c332342"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": ":+1:",
          "createdAt": "2025-10-15T13:38:40Z",
          "updatedAt": "2025-10-15T13:38:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys7H5Fv-",
          "commit": {
            "abbreviatedOid": "c332342"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-10-18T15:27:58Z",
          "updatedAt": "2025-10-18T15:32:44Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I consulted with ChatGPT about SELF/RFCThis and it referenced another of your drafts... Anyway, please add \"Note to RFC Editor: replace RFCThis by...\".",
              "createdAt": "2025-10-18T15:27:58Z",
              "updatedAt": "2025-10-18T15:32:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H809k",
          "commit": {
            "abbreviatedOid": "c332342"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T17:55:59Z",
          "updatedAt": "2025-10-19T17:55:59Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "@thomas-fossati is away until the cutoff, I'll fix this (and the merge conflicts) before release.",
              "createdAt": "2025-10-19T17:55:59Z",
              "updatedAt": "2025-10-19T17:55:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7ICSQN",
          "commit": {
            "abbreviatedOid": "76aa29b"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-20T10:54:06Z",
          "updatedAt": "2025-10-20T10:54:06Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Done! See above",
              "createdAt": "2025-10-20T10:54:06Z",
              "updatedAt": "2025-10-20T10:54:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDON6zrys6uDFkI",
      "title": "Fix \"key attestation\" text",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/30",
      "state": "CLOSED",
      "author": "ionut-arm",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Key Attestation as a mechanism is not required for our use-case and complicates the picture. Removing it for now at least.\r\n\r\nFixes #7",
      "createdAt": "2025-10-16T09:56:27Z",
      "updatedAt": "2025-10-19T21:56:04Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "29a78ed52634255177849b98ccab6df8e76020e8",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "fix-issue7",
      "headRefOid": "cf8b8c9475dff6188e09e84d9b74324a370ce023",
      "closedAt": "2025-10-19T21:56:04Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://github.com/tls-attestation/exported-attestation/issues/7#issuecomment-3410129282 \r\n\r\nI am happy to remove this \u2014 especially in this context, which does not seem particularly suitable.\r\nBut the property of \u201ckey attestation\u201d must be stated somewhere else.",
          "createdAt": "2025-10-16T10:10:25Z",
          "updatedAt": "2025-10-16T10:10:25Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "OK! New text has dropped, let me know if it sounds good. ",
          "createdAt": "2025-10-16T22:35:00Z",
          "updatedAt": "2025-10-16T22:35:00Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "@muhammad-usama-sardar I'm happy to close this since #28 covers what I wanted to convey (or will cover), but I'd prefer it if you also remove those uses of \"key attestation\" throughout the document, and leave it only as a security consideration.",
          "createdAt": "2025-10-19T17:53:23Z",
          "updatedAt": "2025-10-19T17:53:23Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "body": "I removed all instances of key attestation in #28. I don't think it is required in security considerations. My point in the original issue was that it is an ambiguous term and we should avoid it.",
          "createdAt": "2025-10-19T18:50:10Z",
          "updatedAt": "2025-10-19T18:50:10Z"
        },
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah, yes, nevermind, I didn't notice that you'd removed them in your PR too.",
          "createdAt": "2025-10-19T21:56:04Z",
          "updatedAt": "2025-10-19T21:56:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys7HUkcH",
          "commit": {
            "abbreviatedOid": "488627b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Not sure the \u201cFixes #7\u201d is the right tag.  I\u2019d say \u201cPartly addresses #7\u201d instead.",
          "createdAt": "2025-10-16T10:11:14Z",
          "updatedAt": "2025-10-16T10:11:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys7HmrS4",
          "commit": {
            "abbreviatedOid": "cf8b8c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-17T08:12:19Z",
          "updatedAt": "2025-10-17T08:12:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys7H5GjG",
          "commit": {
            "abbreviatedOid": "cf8b8c9"
          },
          "author": "yaronf",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-10-18T15:40:58Z",
          "updatedAt": "2025-10-18T15:48:23Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "The title of this PR is \"nix key attestation\", but then you talk about the key being trustworthy. I think the key is neither attested nor is it trustworthy; it is the *platform* that's attested and becomes trustworthy.",
              "createdAt": "2025-10-18T15:40:58Z",
              "updatedAt": "2025-10-18T15:48:23Z"
            },
            {
              "originalPosition": 62,
              "body": "This paragraph is somewhat weak: do we have an opinion on whether the platform needs to provide evidence as part of the key being certified?\n\nAlso, these guarantees (the private key is securely stored etc.) are subject to the same caveats as the Security Guarantees section being added in PR #28.",
              "createdAt": "2025-10-18T15:45:45Z",
              "updatedAt": "2025-10-18T15:48:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H5W-S",
          "commit": {
            "abbreviatedOid": "cf8b8c9"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T17:54:16Z",
          "updatedAt": "2025-10-18T17:54:16Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Contrary to title of PR, \"key attestation\" is still in use. ",
              "createdAt": "2025-10-18T17:54:16Z",
              "updatedAt": "2025-10-18T17:54:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H80I4",
          "commit": {
            "abbreviatedOid": "cf8b8c9"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T17:44:25Z",
          "updatedAt": "2025-10-19T17:44:25Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Ok, fixed the title, forgot to do it after the first re-write of the PR...\r\n\r\n> I think the key is neither attested nor is it trustworthy; it is the platform that's attested and becomes trustworthy.\r\n\r\nI guess this is a philosophical debate, whether \"delegation\" in the RA context translates into trustworthiness extension. For example, is a confidential workload trustworthy given that the platform has been appraised as trustworthy? Isn't RA just an exercise in propagating trustworthiness from RoT upwards in a software stack? That's my point of view - the code that \"blessed\" the key is trustworthy, so why wouldn't the key be?",
              "createdAt": "2025-10-19T17:44:25Z",
              "updatedAt": "2025-10-19T17:44:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H80MM",
          "commit": {
            "abbreviatedOid": "cf8b8c9"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T17:45:11Z",
          "updatedAt": "2025-10-19T17:45:11Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Yeah, that was an oversight on my side, the initial patch was removing key attestation altogether. ",
              "createdAt": "2025-10-19T17:45:11Z",
              "updatedAt": "2025-10-19T17:45:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H85yq",
          "commit": {
            "abbreviatedOid": "cf8b8c9"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-19T18:53:12Z",
          "updatedAt": "2025-10-19T18:53:12Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I think the difference is that for platform and workload, the Verifying Relying Party has Reference Values. But for this key, it has nothing to compare against. That's why I believe \"Key attestation\" is not attestation, really. ",
              "createdAt": "2025-10-19T18:53:12Z",
              "updatedAt": "2025-10-19T18:53:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDON6zrys6uVKH1",
      "title": "Address comments from Ekr",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/31",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses issues raised in https://github.com/tls-attestation/exported-attestation/issues/23",
      "createdAt": "2025-10-17T15:10:09Z",
      "updatedAt": "2025-10-18T05:08:38Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "29a78ed52634255177849b98ccab6df8e76020e8",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "tireddy2-patch-2",
      "headRefOid": "7a7ce0dab5003f851d6a3d2b1c3484de75fdc59e",
      "closedAt": "2025-10-18T05:08:38Z",
      "mergedAt": "2025-10-18T05:08:38Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "def22ef226ded0f233a8df07ab497fcf7df087ce"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys7Huozd",
          "commit": {
            "abbreviatedOid": "14bb15f"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the fix, Tiru!",
          "createdAt": "2025-10-17T15:41:00Z",
          "updatedAt": "2025-10-17T15:42:32Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I'm a bit confused by the last sentence:\r\n\r\n> Endpoints that do not recognize the cmw_attestation extension in a request MUST ignore it.\r\n\r\nPresumably if the endpoint does not recognize cmw_attestation it's because this document is not something that was considered, so the `MUST` is not enforceable. Is this just the standard way to write up such extensions?",
              "createdAt": "2025-10-17T15:41:00Z",
              "updatedAt": "2025-10-17T15:43:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H09ew",
          "commit": {
            "abbreviatedOid": "14bb15f"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T05:06:02Z",
          "updatedAt": "2025-10-18T05:06:02Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "It is discussed in Section 9.3 of RFC8446 which says:\r\n   -  A server receiving a ClientHello MUST correctly ignore all\r\n      unrecognized cipher suites, extensions, and other parameters.\r\n      Otherwise, it may fail to interoperate with newer clients.  In\r\n      TLS 1.3, a client receiving a CertificateRequest or\r\n      NewSessionTicket MUST also ignore all unrecognized extensions.\r\n\r\nFixed text as follows:\r\nAs specified in {{Section 9.3 of RFC8446}}, endpoints that do not recognize the cmw_attestation extension in a CertificateRequest or ClientCertificateRequest MUST ignore it and continue processing the message as if the extension were absent.",
              "createdAt": "2025-10-18T05:06:02Z",
              "updatedAt": "2025-10-18T05:06:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDON6zrys6uah4q",
      "title": "Address Nits from Ekr",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/32",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-10-18T05:18:42Z",
      "updatedAt": "2025-10-18T13:31:59Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "def22ef226ded0f233a8df07ab497fcf7df087ce",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "tireddy2-patch-3",
      "headRefOid": "bcb643bf27f3efa98f76fbd6c517867c19991762",
      "closedAt": "2025-10-18T13:31:59Z",
      "mergedAt": "2025-10-18T13:31:59Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "e13891041787bcbc384cc867813f60bf670ad092"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON6zrys7H36Gw",
          "commit": {
            "abbreviatedOid": "64bda6a"
          },
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Awesome, thank you!",
          "createdAt": "2025-10-18T11:16:11Z",
          "updatedAt": "2025-10-18T11:16:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON6zrys7H1pU8",
          "commit": {
            "abbreviatedOid": "64bda6a"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-10-18T07:38:18Z",
          "updatedAt": "2025-10-18T11:46:53Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I don't think it is a useful change. You are explaining \"TLS Exported Authenticators\" via \"Exported Authenticator-based\" which is cyclic and does not help the readers with anything.",
              "createdAt": "2025-10-18T07:38:18Z",
              "updatedAt": "2025-10-18T11:46:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON6zrys7H4QP7",
          "commit": {
            "abbreviatedOid": "64bda6a"
          },
          "author": "muhammad-usama-sardar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-18T11:48:00Z",
          "updatedAt": "2025-10-18T11:48:01Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n- TLS Exported Authenticators {{RFC9261}}: It offers bi-directional post-handshake authentication. Once a TLS connection is established, both peers can send an authenticator request message at any point after the handshake. This message from the server and the client uses the CertificateRequest and the ClientCertificateRequest messages, respectively. The peer receiving the authenticator request message can respond with an Authenticator consisting of Certificate, CertificateVerify, and Finished messages. These messages can then be validated by the other peer.\r\n```",
              "createdAt": "2025-10-18T11:48:00Z",
              "updatedAt": "2025-10-18T11:48:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDON6zrys6urqlc",
      "title": "Release 03",
      "url": "https://github.com/tls-attestation/exported-attestation/pull/33",
      "state": "MERGED",
      "author": "ionut-arm",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-10-20T17:59:33Z",
      "updatedAt": "2025-10-20T18:11:07Z",
      "baseRepository": "tls-attestation/exported-attestation",
      "baseRefName": "main",
      "baseRefOid": "c2b014c77c5f3ff3073f1cb1612d446a61098248",
      "headRepository": "tls-attestation/exported-attestation",
      "headRefName": "release-03",
      "headRefOid": "754871d0dd935fd71fcb5803bf50de3a74241cfc",
      "closedAt": "2025-10-20T18:11:07Z",
      "mergedAt": "2025-10-20T18:11:07Z",
      "mergedBy": "ionut-arm",
      "mergeCommit": {
        "oid": "deb10f3fa8f8439cc30cd2d845d9fb35cf84ae3d"
      },
      "comments": [
        {
          "author": "ionut-arm",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR also takes care of renaming for the new WG",
          "createdAt": "2025-10-20T18:04:02Z",
          "updatedAt": "2025-10-20T18:04:02Z"
        }
      ],
      "reviews": []
    }
  ]
}